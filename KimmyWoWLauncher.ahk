#Requires AutoHotkey v2.0

#SingleInstance Force ; –ü—Ä–æ–ø—É—Å–∫ –¥–∏–∞–ª–æ–≥–æ–≤–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–∫—Ä–∏–ø—Ç–∞ –≤ —Å–ª—É—á–∞–µ –µ—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç —É–∂–µ –∑–∞–ø—É—â–µ–Ω. –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ —Ñ—É–Ω–∫—Ü–∏–∏ Reload.

; –ó–∞–∫—Ä—ã—Ç–∏–µ –¥—Ä—É–≥–∏—Ö –≤–µ—Ä—Å–∏–π —Ç–æ–≥–æ –∂–µ —Å–∫—Ä–∏–ø—Ç–∞
CloseOtherVersions("KimmyWoWLauncher")

; === –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–≥—Ä –∏ —Å–∫—Ä–∏–ø—Ç–æ–≤ (–ß—Ç–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏–∑ INI, –ó–ê–î–ê–Å–¢ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨) ===
iniPath := A_ScriptDir "\KimmyWoWLauncher.ini"
scriptVer := "v1.0"

if !FileExist(iniPath) { ; –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ ini
    defaultIni := "
    (
; ==========================================================
; KimmyWoWLauncher.ini
; ==========================================================
; –ü—Ä–∏–≤–µ—Ç! üëã
; –ß—Ç–æ–±—ã –≤—Å—ë —Ä–∞–±–æ—Ç–∞–ª–æ, —Å–¥–µ–ª–∞–π —Ç–∞–∫:
; 1) –í—ã–≤–µ–¥–∏ –Ω–∞ —Ä–∞–±–æ—á–∏–π —Å—Ç–æ–ª —è—Ä–ª—ã–∫–∏ –∑–∞–ø—É—Å–∫–∞ WoW –∏–ª–∏ –ª–∞—É–Ω—á–µ—Ä–æ–≤ WoW
; 2) –í–ø–∏—à–∏ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ gameName1..5 —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –∏–º–µ–Ω–∞ —è—Ä–ª—ã–∫–æ–≤
;    –ù–∞–ø—Ä–∏–º–µ—Ä:
;    gameName1=WoW Circle 8.3.7
;    gameName2=Firestorm Launcher
;
; –ü–∞—Ä–æ–ª–∏ —Å–≤—è–∑–∞–Ω—ã —Å –∏–≥—Ä–∞–º–∏ –ø–æ –Ω–æ–º–µ—Ä–∞–º. –ù–∞–ø—Ä–∏–º–µ—Ä, –ø–∞—Ä–æ–ª—å password1
; –±—É–¥–µ—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ gameName1
; 
; –ö–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—à—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ —Ñ–∞–π–ª–∞, —Å–æ—Ö—Ä–∞–Ω–∏ –µ–≥–æ
; –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏ Kimmy WoW Launcher (–ü–ö–ú –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ ‚öô)
; ==========================================================

[Games]
gameName1=
gameName2=
gameName3=
gameName4=
gameName5=

[Passwords]
password1=
password2=
password3=
password4=
password5=

[Scripts]
scriptName1=
scriptName2=
scriptName3=
scriptName4=
scriptName5=
    )"

    FileAppend(defaultIni, iniPath, "UTF-8")
	
    ; –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    MsgBox("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, –ø—É—Ç–Ω–∏–∫.`n–ü—Ä–∏—Å—è–¥—å —É –∫–æ—Å—Ç—Ä–∞ –∏ –∑–∞–ø–æ–ª–Ω–∏ ini-—Ñ–∞–π–ª, –∫–æ—Ç–æ—Ä—ã–π —Å–µ–π—á–∞—Å –æ—Ç–∫—Ä–æ–µ—Ç—Å—è.", "–ü–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫")

    ; –æ—Ç–∫—Ä—ã–≤–∞–µ–º ini
    Run(iniPath)
}

gamesExist := false
Loop 5 {
    val := IniRead(iniPath, "Games", "gameName" A_Index, "")
    if (val != "") {
        gamesExist := true
        break
    }
}

gameName   := []
password   := []
scriptName := []

Loop 5 {
    i := A_Index
    gameName.Push(IniRead(iniPath, "Games", "gameName" i, ""))
    password.Push(IniRead(iniPath, "Passwords", "password" i, ""))
    scriptName.Push(IniRead(iniPath, "Scripts", "scriptName" i, ""))
}

; –ó–∞–¥–∞–Ω–∏–µ –ø—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º –∏–≥—Ä –∏ —Å–∫—Ä–∏–ø—Ç–æ–≤
game := []
for i, name in gameName {
    if (name != "") {
        game.Push(A_Desktop "\" name ".lnk")
    } else {
        game.Push("")
    }
}
script := []
for i, name in scriptName {
    if (name != "") {
        script.Push(A_Desktop "\" name ".lnk")
    } else {
        script.Push("")
    }
}

; === –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å ===
myGui := Gui("", "Kimmy WoW Launcher")
myGui.SetFont("s10", "Segoe UI")
; –í–µ—Ä—Ö–Ω—è—è —Å—Ç—Ä–æ–∫–∞: –ò–≥—Ä—ã:, –≤–µ—Ä—Å–∏—è, –ù–∞—Å—Ç—Ä–æ–π–∫–∏
if (gamesExist) {
	myGui.AddText("xm", "–ò–≥—Ä—ã:")
} else {
    ; === –µ—Å–ª–∏ –∏–≥—Ä –Ω–µ—Ç ===
	myGui.SetFont("s10 bold")  ; —Å—Ç–∞–≤–∏–º –∂–∏—Ä–Ω—ã–π —à—Ä–∏—Ñ—Ç (s10 = —Ä–∞–∑–º–µ—Ä)
    myGui.AddText("xm", "–ò–≥—Ä—ã –Ω–µ –∑–∞–¥–∞–Ω—ã.`n–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π ini-—Ñ–∞–π–ª –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏ –ª–∞—É–Ω—á–µ—Ä`n(–ü–ö–ú –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ ‚öô)")
}
settingsBtn := myGui.Add("Button", "xs+285 yp-4 w25 h25", "‚öô")
myGui.SetFont("s10 norm")  ; –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—ã—á–Ω—ã–π —à—Ä–∏—Ñ—Ç, —á—Ç–æ–±—ã –æ—Å—Ç–∞–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –±—ã–ª–∏ –Ω–æ—Ä–º–∞–ª—å–Ω—ã–º–∏
myGui.Add("Text", "xp-35 ys", scriptVer)
settingsBtn.OnEvent("Click", (*) => OpenSettingsLeft())
settingsBtn.OnEvent("ContextMenu", (*) => OpenSettingsRight())

OpenSettingsLeft() {
	Run(iniPath)
}

OpenSettingsRight() {
    Reload
}

; –ö–∞—Ä—Ç—ã –≤–º–µ—Å—Ç–æ –º–∞—Å—Å–∏–≤–æ–≤, —á—Ç–æ–±—ã —Å–ø–æ–∫–æ–π–Ω–æ –∏–º–µ—Ç—å ¬´–¥—ã—Ä—ã¬ª –ø–æ –∏–Ω–¥–µ–∫—Å–∞–º
gameBtn   := Map()
cancelBtn := Map()

if (gamesExist) {
	; –°–æ–∑–¥–∞—ë–º –∫–Ω–æ–ø–∫–∏ –∑–∞–ø—É—Å–∫–∞ –∏–≥—Ä –∏ –æ—Ç–º–µ–Ω—ã
	for i, name in gameName {
		if (name != "") {
			gameBtn[i] := myGui.AddButton("xm w200 h30", name)
			cancelBtn[i] := myGui.AddButton("x+10 yp w100 h30", "–û—Ç–º–µ–Ω–∞")
			cancelBtn[i].Visible := false

			gameBtn[i].OnEvent("Click", LaunchWoW.Bind(i))
			gameBtn[i].OnEvent("ContextMenu", OpenGameFolder.Bind(i))
			cancelBtn[i].OnEvent("Click", CancelWoW.Bind(i))
		}
	}
}

; –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∫—Ä–∏–ø—Ç—ã
scriptsExist := false
Loop 5 {
    val := IniRead(iniPath, "Scripts", "scriptName" A_Index, "")
    if (val != "") {
        scriptsExist := true
        break
    }
}

; –ï—Å–ª–∏ –Ω–∞—à–ª–∏ —Ö–æ—Ç—å –æ–¥–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ ‚Äî –¥–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
if (scriptsExist) {
    myGui.AddText("xm", "–°–∫—Ä–∏–ø—Ç—ã:")
	
	scriptChk := Map()
	scriptInfoBtn := Map()
	scriptDesc := Map()

	for i, name in scriptName {
		if (name != "") {
			; –ß–µ–∫–±–æ–∫—Å
			scriptChk[i] := myGui.AddCheckbox("xm", name)
			scriptChk[i].Value := 1

			; –ë–µ—Ä—ë–º —Ä–µ–∞–ª—å–Ω—ã–π –ø—É—Ç—å (–µ—Å–ª–∏ —ç—Ç–æ .lnk ‚Äî —Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ–º —è—Ä–ª—ã–∫)
			real := ResolveShortcut(script[i])

			; –ß–∏—Ç–∞–µ–º ¬´—à–∞–ø–∫—É¬ª –∏–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –≤ –Ω–∞—á–∞–ª–µ —Ñ–∞–π–ª–∞
			scriptDesc[i] := GetScriptDescription(real)

			; –ö–Ω–æ–ø–∫–∞-–∏–Ω—Ñ–æ —Å–ø—Ä–∞–≤–∞ –æ—Ç —á–µ–∫–±–æ–∫—Å–∞ (–∏–∫–æ–Ω–∫–∞ –∫–∞–∫ —É ¬´–û—á–∏—Å—Ç–∏—Ç—å –∫—ç—à¬ª)
			scriptInfoBtn[i] := myGui.AddPicture("yp x+m-10 w16 h16", "Help.png")
			scriptInfoBtn[i].OnEvent("Click", ShowScriptTooltip.Bind(i))
		}
	}
}

if (gamesExist) {
	myGui.AddText("xm", "–¢–≤–∏–∫–∏:")
	chkClearCache := myGui.AddCheckbox("xm", "–û—á–∏—Å—Ç–∏—Ç—å –∫—ç—à")
	ClearCacheinfoBtn := myGui.AddPicture("yp x+m-10 w16 h16", "Help.png")
	ClearCacheinfoBtn.OnEvent("Click", ShowClearCacheTooltip)
	OnMessage(0x201, TooltipHide_OnClick) ; WM_LBUTTONDOWN
	OnMessage(0x204, TooltipHide_OnClick) ; WM_RBUTTONDOWN
	OnMessage(0x207, TooltipHide_OnClick) ; WM_MBUTTONDOWN
	ShowClearCacheTooltip(*) {
		ToolTip("–ü—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∏–≥—Ä—ã —É–¥–∞–ª—è—Ç—Å—è –ø–∞–ø–∫–∏ Cache –∏ Data\Cache")
		SetTimer(() => ToolTip(""), -5000) ; –£–±–∏—Ä–∞–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
	}
}

TooltipHide_OnClick(wParam, lParam, msg, hwnd) {
    global myGui
    ; –ï—Å–ª–∏ –∫–ª–∏–∫–Ω—É–ª–∏ –ø–æ —Å–∞–º–æ–º—É —Ç—É–ª—Ç–∏–ø—É ‚Äî —Å–∫—Ä—ã–≤–∞–µ–º
    try
		cls := WinGetClass("ahk_id " hwnd)
    catch
		cls := ""
    if (cls = "tooltips_class32") {
        ToolTip("")
        return
    }
    ; –ï—Å–ª–∏ –∫–ª–∏–∫ –≤–Ω—É—Ç—Ä–∏ –Ω–∞—à–µ–≥–æ GUI ‚Äî —Ç–æ–∂–µ —Å–∫—Ä—ã–≤–∞–µ–º
    try
		gui := GuiFromHwnd(hwnd)
    catch
		gui := ""
    if (gui && myGui && gui.Hwnd = myGui.Hwnd) {
        ToolTip("")
    }
}

progress := myGui.AddProgress("xm w310 h20 -Smooth")
progress.Value := 0
progress.Visible := false
myGui.Show()

; === –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ ===
wowPID := 0
memoryTimerRunning := false
currentTracker := ""  ; BoundFunc –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ç—Ä–µ–∫–µ—Ä–∞

; === –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ ===
LaunchWoW(index, *) {
    global game, gameBtn, cancelBtn, script, password, progress
    global wowPID, memoryTimerRunning, currentTracker

    ; –ü—Ä–æ–≤–µ—Ä—è–µ–º —è—Ä–ª—ã–∫ –ø—Ä–µ–∂–¥–µ —á–µ–º –ø–æ–ª—É—á–∞—Ç—å exeName
    if !FileExist(game[index]) {
        GuiError("–û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω —è—Ä–ª—ã–∫`n" game[index])
        return
    }
    target := GetShortcutTarget(game[index])
    if (target = "") {
        GuiError("–û—à–∏–±–∫–∞: —è—Ä–ª—ã–∫ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ü–µ–ª–µ–≤–æ–≥–æ –ø—É—Ç–∏`n" game[index])
        return
    }
    exeName := StrSplit(target, "\").Pop()
    ; –ï—Å–ª–∏ –ø—Ä–æ—Ü–µ—Å—Å —É–∂–µ –∑–∞–ø—É—â–µ–Ω ‚Äî –ø—Ä–æ—Å—Ç–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–∫—Ä–∏–ø—Ç—ã –∏ –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è
    if ProcessExist(exeName) {
        wowPID := ProcessExist(exeName)
        RunSelectedScripts()
        A_Clipboard := password[index]
        WinActivate("ahk_pid " wowPID)
        WinMinimize("Kimmy WoW Launcher") ; –°–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –ª–∞—É–Ω—á–µ—Ä
        return
    }
    ; –ï—Å–ª–∏ –ø—Ä–æ—Ü–µ—Å—Å –Ω–µ –∑–∞–ø—É—â–µ–Ω ‚Äî –∑–∞–ø—É—Å–∫ —Å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ–º
    gameBtn[index].Enabled := false ; –î–µ–ª–∞–µ–º –∫–Ω–æ–ø–∫—É –∏—Ä–≥—ã –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ–π
	gamePath := StrReplace(target, "\" exeName)
	cache1 := gamePath "\Cache"
	cache2 := gamePath "\Data\Cache"
	if (chkClearCache.Value) { ; –û—á–∏—â–∞–µ–º –∫—ç—à, –µ—Å–ª–∏ –∞–∫—Ç–∏–≤–µ–Ω —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —á–µ–∫–±–æ–∫—Å –∏ –µ—Å–ª–∏ —Ü–µ–ª–µ–≤—ã–µ –ø–∞–ø–∫–∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
		if DirExist(cache1)
			DirDelete(cache1, true)
		if DirExist(cache2)
			DirDelete(cache2, true)
	}
    progress.Value := 0 ; –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–ª–æ—Å–∫—É –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞ –≤ –Ω–∞—á–∞–ª—å–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ
    progress.Visible := true ; –î–µ–ª–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä –≤–∏–¥–∏–º—ã–º
    Run game[index] ; –ó–∞–ø—É—Å–∫–∞–µ–º –∏–≥—Ä—É
    while !ProcessExist(exeName) ; –ñ–¥—ë–º, –ø–æ–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å –∏–≥—Ä—ã –Ω–µ –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è
        Sleep 100
    wowPID := ProcessExist(exeName)
    cancelBtn[index].Visible := true ; –î–µ–ª–∞–µ–º –∫–Ω–æ–ø–∫—É –û—Ç–º–µ–Ω–∞ –≤–∏–¥–∏–º–æ–π
    if !memoryTimerRunning {
        currentTracker := TrackWoWWindow.Bind(index)
        SetTimer(currentTracker, 500)
        memoryTimerRunning := true
    }
}

TrackWoWWindow(index) {
    global wowPID, progress, cancelBtn, gameBtn, memoryTimerRunning, script, password, currentTracker

    if !ProcessExist(wowPID) {
        SetTimer(currentTracker, 0)
        memoryTimerRunning := false
        progress.Visible := false
		cancelBtn[index].Visible := false
		gameBtn[index].Enabled := true
        return
    }

    mem := GetProcessMemoryMB(wowPID)
    progress.Value := Min(100, Round((mem / 355) * 100))

    if WinExist("ahk_pid " wowPID) {
        SetTimer(currentTracker, 0)
        memoryTimerRunning := false

        ; –ó–∞–ø—É—Å–∫ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤
        RunSelectedScripts()

        ; –ö–æ–ø–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª—å
        A_Clipboard := password[index]
		
        ; –°–∫—Ä—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∏ –∫–Ω–æ–ø–∫—É –û—Ç–º–µ–Ω–∞
        progress.Visible := false
        cancelBtn[index].Visible := false
        gameBtn[index].Enabled := true

        WinActivate("ahk_pid " wowPID) ; –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –∏–≥—Ä—É
        WinMinimize("Kimmy WoW Launcher") ; –°–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –ª–∞—É–Ω—á–µ—Ä
    }
}

RunSelectedScripts() {
    global scriptName, script, scriptChk
    for i, name in scriptName {
        if (name != "" && scriptChk.Has(i) && scriptChk[i].Value = 1) {
            if FileExist(script[i]) {
                Run script[i]
            } else {
                GuiError("–û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω —è—Ä–ª—ã–∫`n" script[i])
                return
            }
        }
    }
}

CancelWoW(index, *) {
    global wowPID, progress, cancelBtn, gameBtn, memoryTimerRunning, currentTracker

    if wowPID && ProcessExist(wowPID)
        ProcessClose(wowPID)

    if currentTracker
        SetTimer(currentTracker, 0)

    memoryTimerRunning := false
    progress.Visible := false
	cancelBtn[index].Visible := false
	gameBtn[index].Enabled := true
}

; === –§—É–Ω–∫—Ü–∏—è GUI-–æ—à–∏–±–∫–∏ ===
GuiError(msg) {
    MsgBox msg, "–û—à–∏–±–∫–∞", "Iconx"
}

; === –ü–æ–ª—É—á–µ–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–∞–º—è—Ç–∏ –≤ MB ===
GetProcessMemoryMB(pid) {
    try {
        for proc in ComObjGet("winmgmts:").ExecQuery("Select * from Win32_Process where ProcessId=" pid)
            return Round(proc.WorkingSetSize / 1024 / 1024)
    } catch {
        return 0
    }
    return 0
}

; === –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–µ–ª–µ–≤–æ–≥–æ –ø—É—Ç–∏ —è—Ä–ª—ã–∫–∞ ===
GetShortcutTarget(path) {
    shell := ComObject("WScript.Shell")
    sc := shell.CreateShortcut(path)
    return sc.TargetPath
}

CloseOtherVersions(prefix) {
    current := A_ScriptName  ; –∏–º—è —Ç–µ–∫—É—â–µ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞

    for process in ComObjGet("winmgmts:").ExecQuery("Select * from Win32_Process where Name='AutoHotkey64.exe' or Name='AutoHotkey.exe'") {
        if InStr(process.CommandLine, prefix) && !InStr(process.CommandLine, current) {
            try ProcessClose(process.ProcessId)
        }
    }
}

; –§—É–Ω–∫—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∏—è –ø–∞–ø–∫–∏ –∏–≥—Ä—ã
OpenGameFolder(index, *) {
    target := GetShortcutTarget(game[index])
    if (target = "") {
        GuiError("–û—à–∏–±–∫–∞: —è—Ä–ª—ã–∫ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ü–µ–ª–µ–≤–æ–≥–æ –ø—É—Ç–∏`n" game[index])
        return
    }
    exeName := StrSplit(target, "\").Pop()
    gamePath := StrReplace(target, "\" exeName)
    Run(gamePath)
}

; –†–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ–º .lnk –≤ —Ä–µ–∞–ª—å–Ω—ã–π –ø—É—Ç—å, –∏–Ω–∞—á–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–∞–∫ –µ—Å—Ç—å
ResolveShortcut(path) {
    if (StrLower(SubStr(path, -3)) = "lnk") {
        try {
            tgt := GetShortcutTarget(path)
            return (tgt != "") ? tgt : path
        } catch {
            return path
        }
    }
    return path
}

; --- –ß–∏—Ç–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑ .ahk –∫–∞–∫ UTF-8, –¥–∞–∂–µ –µ—Å–ª–∏ —Ñ–∞–π–ª –±–µ–∑ BOM ---
GetScriptDescription(path) {
    if !FileExist(path)
        return "–û–ø–∏—Å–∞–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ (—Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω)."

    ; –µ—Å–ª–∏ —ç—Ç–æ .lnk ‚Äî —Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –≤ —Ü–µ–ª–µ–≤–æ–π –ø—É—Ç—å
    if (StrLower(SubStr(path, -3)) = "lnk") {
        try {
            tgt := GetShortcutTarget(path)
            if (tgt != "")
                path := tgt
        }
    }

    ; —á–∏—Ç–∞–µ–º –∏–º–µ–Ω–Ω–æ –∫–∞–∫ UTF-8 (–¥–ª—è —Ñ–∞–π–ª–æ–≤ –±–µ–∑ BOM —ç—Ç–æ –∫—Ä–∏—Ç–∏—á–Ω–æ)
    try {
        text := FileRead(path, "UTF-8")
    } catch {
        ; —Ä–µ–¥–∫–∏–π fallback: —á–∏—Ç–∞–µ–º ¬´—Å—ã—Ä—å—ë–º¬ª –∏ –¥–µ–∫–æ–¥–∏—Ä—É–µ–º –∫–∞–∫ UTF-8
        raw := FileRead(path, "RAW")
        text := StrGet(raw, "UTF-8")
    }

    ; –Ω–æ—Ä–º–∞–ª–∏–∑—É–µ–º –ø–µ—Ä–µ–≤–æ–¥—ã —Å—Ç—Ä–æ–∫
    text := StrReplace(text, "`r", "")

    ; –±–µ—Ä—ë–º —Ç–æ–ª—å–∫–æ –≤–µ—Ä—Ö–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏, –Ω–∞—á–∏–Ω–∞—é—â–∏–µ—Å—è —Å ';'
    started := false
    desc := ""
    for line in StrSplit(text, "`n") {
        t := Trim(line)
        if (!started && t = "")
            continue
        if (SubStr(t, 1, 1) = ";") {
            started := true
            desc .= LTrim(SubStr(t, 2), " ") "`n"
        } else {
            break
        }
    }
    return (desc != "") ? RTrim(desc, "`n") : "–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç."
}

; –ü–æ–∫–∞–∑ —Ç—É–ª—Ç–∏–ø–∞ –ø–æ –∫–ª–∏–∫—É –Ω–∞ –∏–∫–æ–Ω–∫—É
ShowScriptTooltip(index, *) {
    global scriptDesc
    txt := WrapText(scriptDesc[index], 70) ; ‚Üê –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —à–∏—Ä–∏–Ω—ã
    ToolTip(txt)
}

; --- –ü–µ—Ä–µ–Ω–æ—Å —Ç–µ–∫—Å—Ç–∞ –ø–æ —Å–ª–æ–≤–∞–º ---
WrapText(text, maxLen := 70) {
    result := ""
    for line in StrSplit(text, "`n") {
        cur := ""
        for word in StrSplit(line, " ") {
            if (StrLen(cur) + StrLen(word) + 1 > maxLen) {
                result .= RTrim(cur) "`n"
                cur := word " "
            } else {
                cur .= word " "
            }
        }
        if (cur != "")
            result .= RTrim(cur)
        result .= "`n"   ; ‚Üê —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π –ø–µ—Ä–µ–Ω–æ—Å
    }
    return RTrim(result, "`n") ; —É–±–∏—Ä–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø—É—Å—Ç–æ–π
}
